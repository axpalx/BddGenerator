// <auto-generated />
using System;
using Bddgenerator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bddgenerator.Migrations
{
    [DbContext(typeof(BddDataContext))]
    [Migration("20240307011708_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bddgenerator.Model.Projeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Criado_Por")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Criado_Por")
                        .HasComment("Nome de quem criou o projeto no sistema");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Data_Criacao")
                        .HasComment("Data em que o projeto foi criado no sistema");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Descricao")
                        .HasComment("Descrição do projeto");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome")
                        .HasComment("Nome do projeto");

                    b.Property<int>("Quantidade_Sprint")
                        .HasColumnType("INT")
                        .HasColumnName("Quantidade_Sprint")
                        .HasComment("Quantidade de sprints que o projeto irá ter");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nome" }, "IX_Projeto_Nome")
                        .IsUnique();

                    b.ToTable("Projeto", null, t =>
                        {
                            t.HasComment("Tabela de Projeto");
                        });
                });

            modelBuilder.Entity("Bddgenerator.Model.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasComment("Código do usuário");

                    b.Property<string>("Criado_Por")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Data_Criacao")
                        .HasComment("Data em que o usuário foi criado");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Email")
                        .HasComment("E-mail do usuário");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome")
                        .HasComment("Nome do usuário");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(84)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Senha")
                        .HasComment("Senha do usuário");

                    b.Property<bool>("Status")
                        .HasColumnType("BIT")
                        .HasColumnName("Status")
                        .HasComment("Indica se o usuário está ativo ou inativo");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "IX_Usuario_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "Nome" }, "IX_Usuário_Nome");

                    b.ToTable("Usuario", null, t =>
                        {
                            t.HasComment("Tabela de usuário");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
